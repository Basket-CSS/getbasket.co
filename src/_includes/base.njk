<!DOCTYPE html>
<html lang="en" data-theme="light">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Basket CSS Framework</title>

        <meta name="author" content="Omar Quazi">
        <meta name="description" content="A simple, minimalistic CSS framework">

        <!-- Basket CSS -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/getbasket@1.1.1/dist/basket.min.css" integrity="sha256-diZpcL3ZwrWdOSgIkTd9Lk7xorxHS4mT0I1UEfFi9a0=" crossorigin="anonymous">
        
        <!-- Termynal CSS -->
        <link rel="stylesheet" href="/assets/css/termynal.min.css">

        <style>
            .navDownloadButton {
                background: var(--dark);
            }
            .navDownloadButton:hover {
                background: var(--dark-hover) !important;
            }
        </style>

    </head>
    <body>

        <header>

            <nav class="navbar navbar-blue">
                <a href="/" class="navbar-brand">
                    <img src="/assets/imgs/basket-logo-white.png" width="25" height="25"/>
                    Basket
                </a>
                <a class="navbar-collapse">&#9776;</a>
                <div class="navbar-items navbar-right">
                    <a href="/docs/" class="{{ 'active' if '/docs/' == page.url }}">Documentation</a>
                    <a href="/docs/examples" class="{{ 'active' if '/docs/examples' in page.url }}">Kitchen Sink</a>
                    <a target="_blank" class="navDownloadButton latest-version" href="https://github.com/Basket-CSS/basket">Repo</a>
                </div>
            </nav>

        </header>

        {{ content | safe }}

        <!-- Basket JS -->

        <script src="https://cdn.jsdelivr.net/npm/getbasket@1.1.1/dist/basket.min.js" integrity="sha256-komGclTLfPHDdN9BSMYuIajfQfyIHcEteQzTJWkJfKU=" crossorigin="anonymous"></script>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

        <script src="https://rawgit.com/hippich/bower-semver/master/semver.min.js"></script>

        <script src="/assets/js/code-highlight.js"></script>

        <script src="/assets/js/termynal.min.js"></script>
        <script>

            let gitHubPath = 'Basket-CSS/basket'; // example repo
            let url = 'https://api.github.com/repos/' + gitHubPath + '/tags';

            {# $.get(url).done(function (data) {
                let versions = data.sort((v1, v2) => {
                    return semver.compare(v2.name, v1.name)
                });
                console.log(versions);
                $('.latest-version').text(versions[0].name + " ðŸŽ‰");
            }); #}

            function fallbackCopyTextToClipboard(text) {
                var textArea = document.createElement("textarea");
                textArea.value = text;

                // Avoid scrolling to bottom
                textArea.style.top = "0";
                textArea.style.left = "0";
                textArea.style.position = "fixed";

                document
                    .body
                    .appendChild(textArea);
                textArea.focus();
                textArea.select();

                try {
                    var successful = document.execCommand('copy');
                    var msg = successful
                        ? 'successful'
                        : 'unsuccessful';
                    console.log('Fallback: Copying text command was ' + msg);
                } catch (err) {
                    console.error('Fallback: Oops, unable to copy', err);
                }

                document
                    .body
                    .removeChild(textArea);
            }
            function copyTextToClipboard(text) {
                if (!navigator.clipboard) {
                    fallbackCopyTextToClipboard(text);
                    return;
                }
                navigator
                    .clipboard
                    .writeText(text)
                    .then(function () {
                        console.log('Async: Copying to clipboard was successful!');
                    }, function (err) {
                        console.error('Async: Could not copy text: ', err);
                    });
            }

            function copyText(el, textEl) {
                el.innerText = "Copied! ðŸ“‹";
                try {
                    let text = document.querySelector(textEl).innerText;
                    copyTextToClipboard(text);
                } catch (e) {
                }
                
            }

            let termynal = new Termynal('.termynal', {
                cursor: "|",
                progressLength: 20,
                noInit: true
            });

            termynal.init();
        </script>
    </body>
</html>